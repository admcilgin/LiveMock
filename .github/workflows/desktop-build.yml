name: Desktop Build

on:
  push:
    branches:
      - moim-features
    paths:
      - 'desktop/**'
      - 'core/**'
      - '.github/workflows/desktop-build.yml'
  pull_request:
    branches:
      - moim-features
    paths:
      - 'desktop/**'
      - 'core/**'
      - '.github/workflows/desktop-build.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run the workflow'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

jobs:
  build-mac:
    runs-on: macos-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare yarn@4.5.2 --activate

      - name: Cache yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
            desktop/node_modules
            core/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn config set nodeLinker node-modules
          yarn config set networkTimeout 300000
          yarn config set httpTimeout 300000
          yarn install

      - name: Build core
        run: yarn workspace livemock-core build

      - name: Verify core build
        run: |
          echo "Checking core build output..."
          ls -la core/build/
          echo "Core build completed successfully"

      - name: Build desktop app
        run: yarn workspace desktop build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: electron-builder

      - name: Verify desktop build
        run: |
          echo "Checking desktop build output..."
          ls -la desktop/dist-electron/
          ls -la desktop/dist/
          echo "Desktop build completed successfully"

      - name: List release directory
        run: find desktop/release -type f -name "*.dmg"

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: desktop/release/**/*.dmg
          if-no-files-found: warn

  build-windows:
    runs-on: windows-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare yarn@4.5.2 --activate

      - name: Cache yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
            desktop/node_modules
            core/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn config set nodeLinker node-modules
          yarn config set networkTimeout 300000
          yarn config set httpTimeout 300000
          yarn install

      - name: Build core
        run: yarn workspace livemock-core build

      - name: Verify core build
        run: |
          echo "Checking core build output..."
          dir core\build
          echo "Core build completed successfully"

      - name: Build desktop app
        run: yarn workspace desktop build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: electron-builder

      - name: Verify desktop build
        run: |
          echo "Checking desktop build output..."
          dir desktop\dist-electron
          dir desktop\dist
          echo "Desktop build completed successfully"

      - name: List release directory
        run: dir desktop\release /s /b | findstr ".exe"
        shell: cmd

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: desktop/release/**/*.exe
          if-no-files-found: warn

  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Enable Corepack
        run: |
          corepack enable
          corepack prepare yarn@4.5.2 --activate

      - name: Cache yarn dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yarn
            node_modules
            desktop/node_modules
            core/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn config set nodeLinker node-modules
          yarn config set networkTimeout 300000
          yarn config set httpTimeout 300000
          yarn install

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          sudo apt-get install -y build-essential git python3

      - name: Build core
        run: yarn workspace livemock-core build

      - name: Verify core build
        run: |
          echo "Checking core build output..."
          ls -la core/build/
          echo "Core build completed successfully"

      - name: Build desktop app
        run: yarn workspace desktop build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEBUG: electron-builder

      - name: Verify desktop build
        run: |
          echo "Checking desktop build output..."
          ls -la desktop/dist-electron/
          ls -la desktop/dist/
          echo "Desktop build completed successfully"

      - name: List release directory
        run: find desktop/release -type f -name "*.AppImage" -o -name "*.deb"

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            desktop/release/**/*.AppImage
            desktop/release/**/*.deb
          if-no-files-found: warn